Lab 1 Assignment
Please download and turn in your completed notebook to Moodle. Everyone must turn in their own completed assignment. If you don't finish the assignment during class time, please finish and upload before the start of next week's lab.
You are encouraged to collaborate with others and use online resources, but do not copy-paste code from other sources. You may be need to scavenger hunt through the numpy documentation (https://numpy.org/doc/stable/) or use a web search to find numpy functions to complete the exercises.
1
Your name:Ehiremen Justin Jatto
2
Collaborators:
3
External resources used:
Exercise 1: Print all the multiples of 3 from 50 to 150, use list slicing
1
import numpy as np
1
 a = np.arange(51, 151, 1)
2
 print(a[0:100:3])
3
    
4
​
5
​
[ 51  54  57  60  63  66  69  72  75  78  81  84  87  90  93  96  99 102
 105 108 111 114 117 120 123 126 129 132 135 138 141 144 147 150]
1
#### Exercise 2: Create a function that replaces all odd numbers in a numpy array with -1. Test your function with the example below:
2
​
3
##### Example input: np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
4
##### Example output: array([ 0, -1,  2, -1,  4, -1,  6, -1,  8, -1])
1
# Suppose we have a random array A with even and odd elements 
2
# Here is one solution odds is any number in array a 
3
 
4
a = np.array([0,1,2,3,4,5,6,7,8,9])
5
​
6
def replaceodd(x):
7
    x[x%2 == 1] = -1
8
    return x
9
print(replaceodd(a))
10
            
11
## Here we can plug any arbitrary np.array as an input
12
    
13
    
14
    
15
    
16
    
17
​
18
​
19
​
20
​
21
​
22
​
23
    
24
    
25
​
26
​
27
​
[ 0 -1  2 -1  4 -1  6 -1  8 -1]
1
#### Exercise 3: Create a function that returns all the positions where the elements of two arrays match. 
2
#### Test your function with the example below:
3
​
4
##### Example inputs: np.array([0, 0, 0, 1]) and np.array([0, 1, 2, 1])
5
##### Example output: array([0,3])
1
# Requires an empty array a. Prints all the arrays in the iterative process as well unfortunately.
2
a = []
3
c = np.array([0,0,0,1])
4
d = np.array([0,1,2,1])
5
    
6
def checkarray(x,y):
7
    for ind, element in enumerate(x):
8
        if(x[ind] == y[ind]):
9
            a.append(ind)
10
            print (a)
11
checkarray(c,d)
12
​
13
            
14
​
15
    
16
         
17
​
18
            
19
           
20
        
21
        
22
   
23
    
24
​
25
​
26
    
27
            
28
​
29
​
30
​
31
    
32
    
33
    
34
​
35
    
36
            
37
    
38
​
39
​
40
​
41
    
42
            
43
            
44
            
45
    
46
    
47
​
[0]
[0, 3]
Exercise 4: Create a function that takes in an integer and returns a matrix with all zeros with a cross of ones
Test your function with the example below:
Example input: 5
Example output:
array([[1,0,0,0,1],
       [0,1,0,1,0],
       [0,0,1,0,0],
       [0,1,0,1,0],
       [1,0,0,0,1]])
1
# same issue as in question 3 
2
def zeroarray (x):
3
    b = np.zeros((x,x), dtype=int)
4
    c = list(range(0,x))
5
    for ind, element in enumerate (c):
6
        b[element,element] = 1
7
        b[x-element-1,element] = 1
8
        print(b)
9
       
10
zeroarray(5)
11
​
12
​
13
​
14
​
15
         
16
​
17
    
18
    
19
    
20
​
21
    
22
    
23
​
24
    
[[1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]]
[[1 0 0 0 0]
 [0 1 0 0 0]
 [0 0 0 0 0]
 [0 1 0 0 0]
 [1 0 0 0 0]]
[[1 0 0 0 0]
 [0 1 0 0 0]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [1 0 0 0 0]]
[[1 0 0 0 0]
 [0 1 0 1 0]
 [0 0 1 0 0]
 [0 1 0 1 0]
 [1 0 0 0 0]]
[[1 0 0 0 1]
 [0 1 0 1 0]
 [0 0 1 0 0]
 [0 1 0 1 0]
 [1 0 0 0 1]]
Exercise 5: Create a function that takes a numpy array sums all the elements that are divisible by 5.
Test your function with the example below:
Example input: np.array([[1,10],[15,6],[7,8],[10,50]])
Example output: 85
1
​
2
def divfive (x):
3
    x = np.sum(x[x%5 == 0])
4
    return x
5
    
6
​
7
​
8
    
9
​
10
    
11
​
12
​
13
    
14
    
15
   
16
    
85
